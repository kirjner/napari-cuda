"""Protocol definitions for napari-cuda client-server communication."""

from .envelopes import (
    CALL_COMMAND_TYPE,
    ERROR_STATE_TYPE,
    NOTIFY_SCENE_TYPE,
    NOTIFY_STATE_TYPE,
    NOTIFY_STREAM_TYPE,
    PROTO_VERSION,
    REPLY_COMMAND_TYPE,
    SESSION_HELLO_TYPE,
    SESSION_REJECT_TYPE,
    SESSION_WELCOME_TYPE,
    CallCommand,
    CallCommandPayload,
    ErrorMessage,
    ErrorMessagePayload,
    NotifyScene,
    NotifyScenePayload,
    NotifyState,
    NotifyStream,
    NotifyStreamPayload,
    ReplyCommand,
    ReplyCommandPayload,
    SessionHello,
    SessionHelloPayload,
    SessionReject,
    SessionRejectPayload,
    SessionWelcome,
    SessionWelcomePayload,
    StateUpdateMessage,
)
from .messages import (
    STATE_UPDATE_TYPE,
    StateMessage,
    FrameMessage,
    CameraUpdate,
    DimsUpdate,
    Command,
    Response,
)
from .parser import Envelope, EnvelopeParser

__all__ = [
    # Legacy exports
    "STATE_UPDATE_TYPE",
    "StateMessage",
    "StateUpdateMessage",
    "FrameMessage",
    "CameraUpdate",
    "DimsUpdate",
    "Command",
    "Response",
    # Greenfield constants
    "PROTO_VERSION",
    "SESSION_HELLO_TYPE",
    "SESSION_WELCOME_TYPE",
    "SESSION_REJECT_TYPE",
    "NOTIFY_SCENE_TYPE",
    "NOTIFY_STATE_TYPE",
    "NOTIFY_STREAM_TYPE",
    "CALL_COMMAND_TYPE",
    "REPLY_COMMAND_TYPE",
    "ERROR_STATE_TYPE",
    # Greenfield envelopes / payloads
    "SessionHelloPayload",
    "SessionHello",
    "SessionWelcomePayload",
    "SessionWelcome",
    "SessionRejectPayload",
    "SessionReject",
    "NotifyScenePayload",
    "NotifyScene",
    "NotifyState",
    "NotifyStreamPayload",
    "NotifyStream",
    "CallCommandPayload",
    "CallCommand",
    "ReplyCommandPayload",
    "ReplyCommand",
    "ErrorMessagePayload",
    "ErrorMessage",
    # Parser helpers
    "Envelope",
    "EnvelopeParser",
]
